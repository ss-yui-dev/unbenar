
# God, may you have mercy on my brain for thinking this absurd system 
# and make it so the system works as intended on the first try

DA_initialize_metallurgy_variables_units = {
	hidden_effect = {
		set_variable = {
			which = DA_Unit_type
			value = $DA_unit$
		}
		set_variable = {
			which = DA_Cost_$DA_unit$
			value = 0
		}
		set_variable = {
			which = DA_Runes_Slots_STAT_MAX_$DA_unit$
			value = 0
		}
		set_variable = {
			which = DA_Runes_Slots_occupied_$DA_unit$
			value = 0
		}
		set_variable = {
			which = DA_Metal_Magic_Conductivity_STAT_$DA_unit$
			value = 0
		}
		set_variable = {
			which = DA_Metal_strength_STAT.$DA_unit$
			value = 0
		}
		set_variable = {
			which = DA_Metal_electrical_Conductivity_STAT.$DA_unit$
			value = 0
		}
		set_variable = {
			which = DA_fire_Metal_$DA_unit$
			value = 0
		}
		set_variable = {
			which = DA_shock_Metal_$DA_unit$
			value = 0
		}
		set_variable = {
			which = DA_power_Metal_$DA_unit$
			value = 0
		}
		set_variable = {
			which = DA_fire_Rune_$DA_unit$
			value = 0
		}
		set_variable = {
			which = DA_shock_Rune_$DA_unit$
			value = 0
		}
		set_variable = {
			which = DA_power_Rune_$DA_unit$
			value = 0
		}
		set_variable = {
			which = DA_fire_TOTAL_$DA_unit$
			value = 0
		}
		set_variable = {
			which = DA_shock_TOTAL_$DA_unit$
			value = 0
		}
		set_variable = {
			which = DA_power_TOTAL_$DA_unit$
			value = 0
		}
		clr_country_flag = DA_Steam_blueprint.$DA_unit$
		clr_country_flag = DA_Electrical_blueprint.$DA_unit$
	}
}
DA_apply_Blueprint = {
	custom_tooltip = DA_Blueprint_preview_tooltip
	custom_tooltip = DA_Cost.tt.$DA_Cost$
	custom_tooltip = DA_RuneSlots.tt.$DA_RUNE_SLOTS$
	custom_tooltip = DA_power.tt.$DA_power.Metal$
	custom_tooltip = DA_Fire.ARTIL.tt.$DA_fire.Metal$
	custom_tooltip = DA_shock.ARTIL.tt.$DA_shock.Metal$
	custom_tooltip = DA_Blueprint_preview_tooltip_after
	hidden_effect = {
		change_variable = {
			which = DA_Cost_$DA_unit$
			value = $DA_Cost$
		}
		change_variable = {
			which = DA_Runes_Slots_STAT_MAX_$DA_unit$
			value = $DA_RUNE_SLOTS$
		}
		change_variable = {
			which = DA_fire_Metal_$DA_unit$
			value = $DA_fire.Metal$
		}
		change_variable = {
			which = DA_shock_Metal_$DA_unit$
			value = $DA_shock.Metal$
		}
		change_variable = {
			which = DA_power_Metal_$DA_unit$
			value = $DA_power.Metal$
		}
	}
	[[DA_Unique]
	# this flag is needed to apply unique modifiers at the end with relative tooltip
		set_country_flag = DA_Unique_mod.BLUEPRINT.Flag.$DA_unit$.$DA_Unique$
		custom_tooltip = DA_Unique_blueprint_TT
		tooltip = {
			add_country_modifier = DA_Unique_mod.BLUEPRINT.$DA_unit$.$DA_Unique$
		}
	]
	[[DA_Electrical]
	# this flag is needed to apply electrical modifiers at the end with relative tooltip
		set_country_flag = DA_Electrical_mod.BLUEPRINT.Flag.$DA_unit$.$DA_Electrical$
		custom_tooltip = DA_Electrical_blueprint_TT
		tooltip = {
			add_country_modifier = DA_Electrical_mod.BLUEPRINT.$DA_unit$.$DA_Electrical$
		}
	]
}
DA_apply_Metal = {
	custom_tooltip = DA_Metal_stat_explanation_short_strength_tt
	custom_tooltip = DA_Metal_stat_explanation_short_MC_tt
	custom_tooltip = DA_Metal_stat_explanation_short_EC_tt
	custom_tooltip = DA_Cost.tt.$DA_Cost$
	custom_tooltip = DA_Metal_strength_stat.$DA_Strength$
	custom_tooltip = DA_Metal_MC_stat.$DA_Magic_Conductivity$
	custom_tooltip = DA_Metal_EC_stat.$DA_Electrical_Conductivity$
	hidden_effect = {
		change_variable = {
			which = DA_Cost_$DA_unit$
			value = $DA_Cost$
		}
		change_variable = {
			which = DA_Metal_strength_STAT.$DA_unit$
			value = $DA_Strength$
		}
		change_variable = {
			which = DA_Metal_Magic_Conductivity_STAT_$DA_unit$
			value = $DA_Magic_Conductivity$
		}
		change_variable = {
			which = DA_Metal_electrical_Conductivity_STAT.$DA_unit$
			value = $DA_Electrical_Conductivity$
		}
		multiply_variable = {
			which = DA_fire_Metal_$DA_unit$
			which = DA_Metal_strength_STAT.$DA_unit$
		}
		multiply_variable = {
			which = DA_shock_Metal_$DA_unit$
			which = DA_Metal_strength_STAT.$DA_unit$
		}
		multiply_variable = {
			which = DA_power_Metal_$DA_unit$
			which = DA_Metal_strength_STAT.$DA_unit$
		}
		change_variable = {
			which = DA_fire_TOTAL_$DA_unit$
			which = DA_fire_Metal_$DA_unit$
		}
		change_variable = {
			which = DA_shock_TOTAL_$DA_unit$
			which = DA_shock_Metal_$DA_unit$
		}
		change_variable = {
			which = DA_power_TOTAL_$DA_unit$
			which = DA_power_Metal_$DA_unit$
		}
	}
	[[DA_Unique]
	# this flag is needed to apply unique modifiers at the end with relative tooltip
		set_country_flag = DA_Unique_mod.METAL.Flag.$DA_unit$.$DA_Unique$
		custom_tooltip = DA_Unique_METAL_TT
		tooltip = {
			add_country_modifier = {
				name = DA_Unique_mod.METAL.$DA_unit$.$DA_Unique$
				duration = -1
			}
		}
	]
}
DA_apply_Runes = {
	custom_tooltip = DA_Rune_preview_tooltip
	custom_tooltip = DA_Cost.tt.$DA_Cost$
	custom_tooltip = DA_Fire.tt.$DA_fire.Rune$
	custom_tooltip = DA_shock.tt.$DA_shock.Rune$
	custom_tooltip = DA_power.tt.$DA_power.Rune$
	custom_tooltip = DA_Rune_preview_tooltip_after
	[[DA_Unique]
	# this flag is needed to apply unique modifiers at the end with relative tooltip
		set_country_flag = DA_Unique_mod.RUNE.Flag.$DA_unit$.$DA_Unique$
		custom_tooltip = DA_Unique_RUNE_TT
		tooltip = {
			add_country_modifier = {
				name = DA_Unique_mod.RUNE.$DA_unit$.$DA_Unique$
				duration = -1
			}
		}
	]
	hidden_effect = {
		change_variable = {
			which = DA_Cost_$DA_unit$
			value = $DA_Cost$
		}
		change_variable = {
			which = DA_fire_Rune_$DA_unit$
			value = $DA_fire.Rune$
		}
		change_variable = {
			which = DA_shock_Rune_$DA_unit$
			value = $DA_shock.Rune$
		}
		change_variable = {
			which = DA_power_Rune_$DA_unit$
			value = $DA_power.Rune$
		}
		change_variable = {
			which = DA_Runes_Slots_occupied_$DA_unit$
			value = 1
		}
		if = {
			limit = {
				check_variable = {
					which = DA_Runes_Slots_occupied_$DA_unit$
					which = DA_Runes_Slots_STAT_MAX_$DA_unit$
				}
			}
			# Multiply total rune x MC
			multiply_variable = {
				which = DA_fire_Rune_$DA_unit$
				which = DA_Metal_Magic_Conductivity_STAT_$DA_unit$
			}
			multiply_variable = {
				which = DA_shock_Rune_$DA_unit$
				which = DA_Metal_Magic_Conductivity_STAT_$DA_unit$
			}
			multiply_variable = {
				which = DA_power_Rune_$DA_unit$
				which = DA_Metal_Magic_Conductivity_STAT_$DA_unit$
			}
			clr_country_flag = DA_redo.$DA_unit$

			# calculate totals rune multiplied, metal multiplies was added earlier

			change_variable = {
				which = DA_fire_TOTAL_$DA_unit$
				which = DA_fire_Rune_$DA_unit$
			}
			change_variable = {
				which = DA_shock_TOTAL_$DA_unit$
				which = DA_shock_Rune_$DA_unit$
			}
			change_variable = {
				which = DA_power_TOTAL_$DA_unit$
				which = DA_power_Rune_$DA_unit$
			}
		}
		else = {
			set_country_flag = DA_redo.$DA_unit$
			#calcolo dei totali
		}
	}
}
DA_pre_apply_metallurgy_modifiers = {
	set_variable = {
		which = DA_power_TOTAL_$DA_unit$_shower
		which = DA_power_TOTAL_$DA_unit$
	}
	multiply_variable = {
		which = DA_power_TOTAL_$DA_unit$_shower
		value = 100
	}
}
